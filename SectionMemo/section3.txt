import streamlit as st
import numpy as np
import pandas as pd
from PIL import Image
import time

st.title('Streamlit入門')

# st.write('DataFrame')
# st.write('Display Image')
# st.sidebar.write('Interactive Widgets')
# st.write('Interactive Widgets')
st.write('プログレスバーの表示')

# df = pd.DataFrame({
#     '1列目': [1, 2, 3, 4],
#     '2列目': [10, 20, 30, 40]
# })

# st.write(df)
# いくつか指定できる引数があるのが「dataframe」
# st.dataframe(df.style.highlight_max(axis=0), width=100, height=100)
# st.dataframe(df.style.highlight_max(axis=0))
# st.table(df.style.highlight_max(axis=0))

# 詳しく見るときはドキュメントのAPIリファレンス->ディスプレイデータ
# https://docs.streamlit.io/library/api-reference/data
# -------------------------------------------------------------------------
# """
# # 章
# ## 節
# ### 項

# ```python
# import streamlit as st
# import numpy as np
# import pandas as pd
# ```

# """
# ドキュメントAPIリファレンス->ディスプレイテキスト
# -------------------------------------------------------------------------

# 折れ線グラフ
# df = pd.DataFrame(
#     # 縦,横　正規分布がなんたらだった気がするらしい
#     np.random.rand(20, 3),
#     columns=['a', 'b', 'c']
# )

# st.line_chart(df)
# st.area_chart(df)
# st.bar_chart(df)

# APIリファレンス->ディスプレイチャート
# -------------------------------------------------------------------------
# マップ
# df = pd.DataFrame(
#     # 緯度経度
#     np.random.rand(100, 2)/[50, 50] + [35.69, 139.70],
#     columns=['lat', 'lon']
# )
# st.map(df)
# チャートかどっかにある
# -------------------------------------------------------------------------
# st.write('Display Image')
# img = Image.open('sample.jpg')
# st.image(img, caption='Kohei Imanishi', use_column_width=True)
# 画像以外もいける　ディスプレイメディア
# -------------------------------------------------------------------------
# 動的なもの
# チェックボックス


# if st.checkbox('Show Image'):
#     img = Image.open('sample.jpg')
#     st.image(img, caption='Kohei Imanishi', use_column_width=True)
# -------------------------------------------------------------------------
# Selectbox
# option =  st.selectbox(
#     'あなたが好きな数字を教えてください。',
#     list(range(1, 11))
# )
# 'あなたの好きな数字は、', option, 'です。'
# -------------------------------------------------------------------------
# テキスト入力
# text =  st.text_input('あなたの趣味を教えてください。')
# condition = st.slider('あなたの今の調子は？', 0, 100, 50)
# # text =  st.sidebar.text_input('あなたの趣味を教えてください。')
# # condition = st.sidebar.slider('あなたの今の調子は？', 0, 100, 50)

# 'あなたの趣味：', text
# 'コンディション：', condition
# API　ー＞　ディスプレイインタラクティブ
# -------------------------------------------------------------------------
'Start!!'

latest_iteration = st.empty()
bar = st.progress(0)

for i in range(100):
    latest_iteration.text(f'Iteration{i+1}')
    bar.progress(i + 1)
    time.sleep(0.1)

'Done!!!!!'

# -------------------------------------------------------------------------
left_colimn, right_column = st.columns(2)
button = left_colimn.button('右カラムに文字を表示')
if button:
    right_column.write('ここは右カラム')

expander1 = st.expander('問い合わせ1')
expander1.write('問い合わせ１の回答')
expander2 = st.expander('問い合わせ2')
expander2.write('問い合わせ２の回答')
expander3 = st.expander('問い合わせ3')
expander3.write('問い合わせ３の回答')




#requirememts.txtには外部libraryだけ書く